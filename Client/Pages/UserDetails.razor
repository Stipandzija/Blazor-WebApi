@page "/user-details"
@inject Client.Services.UserService UserService
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <h3>User Details</h3>

            @if (isLoading)
            {
                <p>Loading...</p>
            }
            else
            {
                @if (timeLeft == null)
                {
                    <p>Unable to retrieve token time left.</p>
                }
                else
                {
                    <p><strong>Dopuštenje:</strong> @timeLeft</p>
                }
            }
        </Authorized>

        <NotAuthorized>
            <p>You must be logged in to view user details.</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private string? timeLeft;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await UserService.GetTokenTimeLeftAsync();
            if (response != null)
            {
                timeLeft = response;
            }
            else
            {
                timeLeft = "Unable to retrieve token time left";
            }
        }
        catch (Exception ex)
        {
            timeLeft = $"Error: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
